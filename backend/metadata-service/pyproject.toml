[tool.poetry]
name = "metadata"
version = "0.1.0"
description = "Njord's Ledger metadata service"
authors = ["Miguel Peixoto <miguel.peixoto.99@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
cerberus = "^1.3.5"
flask = "^2.3.3"
werkzeug = "^3.0.1"
requests = "^2.31.0"
google-cloud-firestore = "^2.11.1"
gunicorn = "^21.2.0"

[tool.poetry.dev-dependencies]
pytest = "^7.4.2"
pytest-mock = "^3.11.1"
pytest-cov = "~4.1.0"
mock = "~5.0.0"
ruff = "0.0.292"
black = "^23.10.1"
vulture = "^2.10"

[tool.poetry.scripts]
metadata_service = "metadata.server:main"

[tool.pytest.ini_options]
addopts = "-v"
filterwarnings = "ignore::DeprecationWarning"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
source = ['metadata']

[tool.coverage.report]
fail_under = 65
omit = [
    '*__init__.py',
    '*__main__.py',
]

[tool.ruff]
select = [
    "E",        #pycodestyle error
    "W",        #pycodestyle warning
    "D",        #pydocstyle
    "F",        #pyflakes
    "I",        #isort
    "B",        #bugbear
    "S",        #bandit
    "N",        #pep8-naming
    "G",        #flake8-logging-format
    "PL",       #pylint
    "FLY",      #flynt
    "TRY",      #tryceratops
    "TCH",      #flake8-type-checking
    "C90",      #McCabe complexity
    "ASYNC",    #flake8-async
]
extend-exclude = [
    "tests",
    "*__main__.py",
    "*__init__.py",
]
output-format = "grouped"
line-length = 88
ignore = [
    "D100", # missing docstring in public module
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.vulture]
paths = ["metadata/"]
make_whitelist = true
min_confidence = 70
sort_by_size = true